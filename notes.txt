General
-------
finish unit testing the lib
	- ensure tests are actually ran
	- ensure output formats
create lib/include structure
check Release builds for warnings (and failing tests)
can runner be made configuration agnostic? (ie, can debug runner load release tests, and vice versa?)
inline theories


Visual Studio 2012 notes
------------------------
create vsix for test runners


Linux notes
-----------
for shared/dynamic libs, see:
	http://www.techytalk.info/c-cplusplus-library-programming-on-linux-part-one-static-libraries/
	http://www.techytalk.info/c-cplusplus-library-programming-on-linux-part-two-dynamic-libraries/
	http://www.techytalk.info/c-cplusplus-library-programming-on-linux-part-three-dynamic-libraries-using-posix-api/


Stretch
-----
non-fatal asserts
would be nice to have some logging support (Log::Information("msg"))
gtest has nice per-assert messages: Assert.Equal(a, b) << "msg"
msbuild test runner
GUI runner (windows only?)
custom xUnitAsserts per assert (revisit unit tests at that point)
support wstring as an assert call parameter
create NuGet package/template (NuGet does not support C++ projects, yet)
